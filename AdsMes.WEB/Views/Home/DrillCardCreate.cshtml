@model AdsMes.WEB.Models.DrillCardViewModel

@{
    ViewBag.Title = "Карта проверки свёрл";
}

<h2>Карта проверки свёрл</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.PairNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PairNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PairNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UpperHead, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.UpperHead, new List<SelectListItem> { new SelectListItem { Text = "Да", Value = "Да" },
                                                                                       new SelectListItem { Text = "Нет", Value = "Нет" } },
                                                                                       "Выбрать",
                                                                                       new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.UpperHead, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LowerHead, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.LowerHead, new List<SelectListItem> { new SelectListItem { Text = "Да", Value = "Да" },
                                                                                       new SelectListItem { Text = "Нет", Value = "Нет" } },
                                                                                       "Выбрать",
                                                                                       new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.LowerHead, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Resource, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Resource, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Resource, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Manufacter, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Manufacter, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Manufacter, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NewDrill, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.NewDrill, new List<SelectListItem> { new SelectListItem { Text = "Да", Value = "Да" },
                                                                                       new SelectListItem { Text = "Нет", Value = "Нет" } },
                                                                                       "Выбрать",
                                                                                       new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.NewDrill, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SharpenDrill, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SharpenDrill, new List<SelectListItem> { new SelectListItem { Text = "Да", Value = "Да" },
                                                                                       new SelectListItem { Text = "Нет", Value = "Нет" } },
                                                                                       "Выбрать",
                                                                                       new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.SharpenDrill, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShiftNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ShiftNumber, new List<SelectListItem> { new SelectListItem { Text = "1", Value = "1" },
                                                                                       new SelectListItem { Text = "2", Value = "2" } },
                                                                                       "Выбрать",
                                                                                       new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.ShiftNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Отправить" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("На главную", "Index", null, new { @class = "btn btn-info" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
